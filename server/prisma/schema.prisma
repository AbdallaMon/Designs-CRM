// Keep the generator, datasource and enums as is
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum NotificationType {
 NEW_LEAD
 LEAD_ASSIGNED
 LEAD_STATUS_CHANGE
 LEAD_TRANSFERRED
 LEAD_UPDATED
 LEAD_CONTACT
 NOTE_ADDED
 NEW_NOTE
 NEW_FILE
 CALL_REMINDER_CREATED
 CALL_REMINDER_STATUS
 PRICE_OFFER_SUBMITTED
 PRICE_OFFER_UPDATED
 FINAL_PRICE_ADDED
 FINAL_PRICE_CHANGED
 OTHER
}
enum ContentType {
 TEXT
 HTML
}

enum LeadCategory {
 CONSULTATION
 DESIGN
 OLDLEAD
}
enum LeadType{
// design
 ROOM
 BLUEPRINT
 CITY_VISIT

 APARTMENT
 CONSTRUCTION_VILLA
 UNDER_CONSTRUCTION_VILLA
 PART_OF_HOME
 COMMERCIAL
 NONE
}


enum Emirate {
 DUBAI
 ABU_DHABI
 SHARJAH
 AJMAN
 UMM_AL_QUWAIN
 RAS_AL_KHAIMAH
 FUJAIRAH
 KHOR_FAKKAN
 OUTSIDE
}

enum UserRole {
 ADMIN
 STAFF
}

enum ClientLeadStatus {
 NEW
 IN_PROGRESS
 INTERESTED
 NEEDS_IDENTIFIED
 NEGOTIATING
 REJECTED
 FINALIZED
 CONVERTED
 ON_HOLD
}

enum CallReminderStatus {
  IN_PROGRESS
  DONE
  MISSED
}
model ClientLead {
      id                 Int              @id @default(autoincrement())
      client             Client           @relation(fields: [clientId], references: [id])
      clientId           Int
      assignedTo         User?            @relation(fields: [userId], references: [id])
      userId             Int?

      // Lead type data
      selectedCategory   LeadCategory
      type   LeadType @default(CONSTRUCTION_VILLA)
      description String?
      clientDescription  String?
      discount  Decimal   @db.Decimal(10, 2) @default(0)
      emirate            Emirate?
      price              String?
      averagePrice  Decimal?   @db.Decimal(10, 2)
      priceWithOutDiscount  Decimal   @db.Decimal(10, 2) @default(0)
      priceOffers PriceOffers[]

      status             ClientLeadStatus @default(NEW)
      files              File[]
      notes              Note[]
      notifications      Notification[]
      callReminders      CallReminder[]   @relation("clientLeadCallReminders")
      assignedAt         DateTime?
      reasonToConvert String?
      createdAt          DateTime         @default(now())
      updatedAt          DateTime         @updatedAt

      timeToContact       DateTime?
      country             String?
      @@index([clientId])
      @@index([userId])
}
model PriceOffers {
  id        Int       @id @default(autoincrement())
  clientLead   ClientLead @relation(fields: [clientLeadId], references: [id])
  clientLeadId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
   url          String?     @db.VarChar(255)
  minPrice  Decimal   @db.Decimal(10, 2)
  maxPrice  Decimal   @db.Decimal(10, 2)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([clientLeadId])
}

model CallReminder {
  id            Int              @id @default(autoincrement())
  clientLead    ClientLead       @relation(fields: [clientLeadId], references: [id], name: "clientLeadCallReminders")
  clientLeadId  Int
  time          DateTime
  status        CallReminderStatus @default(IN_PROGRESS)
  callResult    String?           @db.Text
  reminderReason String?          @db.Text
  user    User              @relation(fields: [userId], references: [id])
  userId        Int
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@index([clientLeadId])
  @@index([userId])
}


model File {
 id           Int        @id @default(autoincrement())
 name         String     @db.VarChar(255)
 url          String     @db.VarChar(255)
 description  String?    @db.Text
 clientLead   ClientLead @relation(fields: [clientLeadId], references: [id])
 clientLeadId Int
 isUserFile   Boolean    @default(true)
 createdAt    DateTime   @default(now())
 user         User?       @relation(fields: [userId], references: [id])
 userId    Int?
 @@index([clientLeadId, isUserFile])
}

model User {
 id            Int            @id @default(autoincrement())
 email         String         @unique @db.VarChar(255)
 name          String         @db.VarChar(255)
 password      String         @db.VarChar(255)
 isActive         Boolean           @default(true)
 role          UserRole       @default(STAFF)
 clientLeads   ClientLead[]
 notifications   Notification[]   @relation("UserNotifications")
 staffNotifications Notification[] @relation("StaffNotifications")
 notes         Note[]
 priceOffers PriceOffers[]
 createdAt     DateTime       @default(now())
 updatedAt     DateTime       @updatedAt
 callReminders CallReminder[]
 files File[]
 @@index([email])
}

model Client {
 id          Int          @id @default(autoincrement())
 name        String       @db.VarChar(255)
 phone       String       @db.VarChar(20)
 email       String       @db.VarChar(255) @unique
 clientLeads ClientLead[]
 createdAt   DateTime     @default(now())
 updatedAt   DateTime     @updatedAt

 @@index([email])
}

model Note {
 id           Int        @id @default(autoincrement())
 content      String     @db.Text
 clientLead   ClientLead @relation(fields: [clientLeadId], references: [id])
 clientLeadId Int
 user         User       @relation(fields: [userId], references: [id])
 userId       Int
 createdAt    DateTime   @default(now())

 @@index([clientLeadId])
 @@index([userId])
}


model Notification {
 id           Int              @id @default(autoincrement())
 type         NotificationType
 content      String           @db.Text
 contentType ContentType @default(TEXT)
 link         String?          @db.VarChar(255)
 isRead       Boolean          @default(false)
 user         User?            @relation("UserNotifications", fields: [userId], references: [id])
 userId       Int?
 staff        User?            @relation("StaffNotifications", fields: [staffId], references: [id])
 staffId      Int?
 clientLead   ClientLead?       @relation(fields: [clientLeadId], references: [id])
 clientLeadId Int?
 createdAt    DateTime         @default(now())

 @@index([userId])
 @@index([clientLeadId])
}

model FixedData {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}